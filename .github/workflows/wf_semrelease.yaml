on:
  push:
    branches:
      - "main"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        token: ${{secrets.PAT_TOKEN}}

    - name: Setup Git
      run: |
        git config --global user.name ${{vars.username}}
        git config --global user.email ${{vars.email}}

    - name: Get latest tag
      run: |
        LATEST_TAG=$(git describe --tags $(git rev-list --tags --max-count=1) 2>/dev/null || echo "v0.0.0")
        echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV
        echo "test" 
        echo $LATEST_TAG

    - name: Get last commit message
      run: |
        COMMIT_MSG=$(git log -1 --pretty=%B)
        echo "COMMIT_MSG=$COMMIT_MSG" >> $GITHUB_ENV
        echo "test"
        echo $COMMIT_MSG
      
    - name: Analyze commit message
      run: |
        if [[ "$COMMIT_MSG" == *"fix"* ]]; then
          echo "CHANGE_TYPE=patch" >> $GITHUB_ENV
        elif [[ "$COMMIT_MSG" == *"feat"* ]]; then
          echo "CHANGE_TYPE=minor" >> $GITHUB_ENV
        elif [[ "$COMMIT_MSG" == *"breakingChange"* ]]; then
          echo "CHANGE_TYPE=major" >> $GITHUB_ENV
        fi
        echo $CHANGE_TYPE
      
    #  if: ${{ contains(git log --format=%B -n 1, 'fix') }}
    #  run: echo yes

    #- name: Analyze commit message feat
    #  if: $GITHUB_ENV == "feat"

    #- name: Analyze commit message breakingChange
    #  if: $GITHUB_ENV == "breakingChange"

    #- name: Determine new version

    #- name: Create new tag

    #- name: Show new version